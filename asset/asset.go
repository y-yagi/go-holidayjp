// Code generated by go-bindata.
// sources:
// asset/holidays.yml
// DO NOT EDIT!

package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetHolidaysYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x9d\xef\x6e\x1d\xd7\x75\xc5\xbf\xf7\x29\xf8\x02\x04\x66\xff\x99\x99\x7d\xf8\x74\xa1\xa4\x26\x72\xe2\x00\x69\x53\x3b\x46\x02\xc3\x1f\x2a\xc1\xb5\x61\xab\xb0\x5d\xa3\xa8\x2b\x43\x0f\x43\x91\xd2\x37\xbf\x42\x31\xf7\x9c\x19\xf2\xde\xb3\xd7\x9a\x29\x90\x4f\x7b\x0d\x69\x6a\xaf\xb9\xf7\xae\xf5\xe3\xe1\xe4\xfa\xfa\xfa\x9f\xa4\xcc\xc3\xf5\x20\xd7\x83\xdc\x5c\xdd\xff\xf3\xf3\x87\xbf\xbd\xde\x46\x32\xde\x5c\x3d\xbc\xfc\xcb\xfb\x5f\x7e\xb9\xbb\x7d\xf3\x28\xe8\xb5\x2c\xd7\xfe\xef\x2f\xf7\xff\xf8\xf5\xe3\x7f\x7c\x71\xff\xee\xe7\x33\xd9\xae\x55\x6e\xae\x1e\xbe\x78\x7d\xff\xf2\xf7\x67\x82\x5f\x6b\xb9\xb9\xba\x7f\xf5\xcd\x87\xbf\xff\xe1\xe3\xb7\x9f\x7d\xf8\xb7\xaf\x1e\xb5\xf1\x7a\xb0\x9b\xab\x87\xdf\xff\xf8\xf0\xd3\x67\xf5\x7b\x9e\x69\xe3\xcd\xd5\xdd\xed\x5f\xef\x6e\xbf\xb9\x7b\xf6\xec\xec\x7b\x96\xfa\x43\x7e\xf6\xdd\xc7\xdf\xdd\x5e\x08\x6a\x37\x57\x1f\xbe\xfe\xd3\xc5\x4f\x21\xcb\xff\x6e\xae\xde\xff\xfa\xd7\x8f\xcf\x7e\x3c\x13\xa4\xfe\x08\x9f\xff\xe1\xfe\xd3\xcf\x2f\x84\xe5\x5b\xdd\xff\xe9\xd5\xfd\x1f\xff\xeb\xe1\xc5\x57\x1f\xbf\xfb\xf2\x51\x96\x7e\x75\x82\x56\x27\x7c\x75\x82\x56\x27\x64\x75\x42\x56\x27\x64\x75\x82\x56\x77\x12\xd4\xfb\xd5\x09\x5a\x9d\xa0\xd5\x09\x5f\x9d\xf6\xab\x53\xb4\x3a\xe5\xab\xd3\xd3\xea\x86\x7e\x75\x4a\x56\xa7\x64\x75\x4a\x56\xa7\x68\x75\x8a\xee\x3a\x45\xab\x53\xb4\x3a\xe5\xab\xb3\x7e\x75\x86\x56\x67\x7c\x75\x86\xee\x3a\x23\xab\x3b\x69\x36\x74\xda\xd5\xc3\xa7\xff\xf9\xf0\x8f\x77\xef\xdf\xfe\xcb\xe3\x85\x70\xc7\x46\x76\x6c\x68\xc7\x86\x76\x6c\xd9\x7d\x9b\xfc\x3c\xc0\x09\x43\x4e\x18\x77\xc2\x7b\x27\x1c\x39\xe1\xdc\x09\x47\x4e\x38\x71\xc2\xc9\x82\x9d\x2c\xb8\x6a\x53\xa7\x75\x1b\x73\xe4\x44\x15\xa6\x73\x21\xff\xf2\xcc\x2f\x47\x4e\x38\x72\xa2\x0a\x7e\x2e\x24\xff\x41\xea\xd7\xd8\xfb\x35\x22\xbf\x46\xee\xd7\x88\xfc\x1a\x89\x5f\x23\xf1\x6b\x24\x7e\x8d\xc8\x86\x11\xbd\x5f\x8f\x68\xc1\x23\x5a\xf0\xb8\xb7\xba\x45\xf6\x4c\xee\x5c\x98\xfa\x35\x4f\x68\xcd\x13\x5f\xf3\x84\xde\xdb\x27\xb2\xe6\x89\xac\x79\x22\x6b\x9e\xd0\x9a\x27\x74\x1f\x4f\x68\xcd\x55\x90\x73\x21\x59\x14\x30\x63\xe2\x66\xcc\xfd\x82\x67\xb4\xe0\x99\x2f\x78\x46\xf7\xf1\x4c\x16\x3c\x93\x05\xcf\x64\xc1\x33\x5a\xf0\x8c\x16\x3c\xa3\x05\xcf\x68\x75\x33\x5f\x5d\xf4\xab\xab\x23\x5d\x47\x9d\x4b\x81\x56\x5b\x85\xe9\x5c\xc8\xbe\x9c\x19\x10\xc8\x80\x20\x06\x04\x31\x20\x88\x01\x81\x0c\x08\x64\x40\x20\x03\x02\x19\x10\xdc\x80\xd2\x1b\x50\xd0\x82\x0b\x5f\x5d\x95\x35\x93\x3b\x17\x0a\x5a\x73\x21\x6b\x2e\x47\x93\x4e\x21\x7e\x14\xe2\x47\x41\x7e\x14\xf4\xc6\x5e\x90\x1f\x05\xf9\x51\xa8\x1f\xd1\xd7\xbf\x40\xf5\x2f\x78\xfd\x8b\x01\xbc\x59\x07\xa9\x7f\x41\xea\x5f\x90\xfa\x17\xa8\xfe\x05\xaa\x7f\x81\xea\x5f\xa0\xfa\x17\xbc\xfe\x35\xf9\xd0\x67\x62\xf4\x55\x31\x50\x55\x0c\x5e\x15\x03\x55\xc5\x20\x55\x31\x48\x55\x6c\x9a\x77\x5a\xf6\x8f\x80\x7e\xa0\x4e\x59\x85\xcc\x0f\xd4\x29\x03\x75\xca\xe0\x9d\x32\xfa\x4e\x19\xa8\x53\x06\xef\x94\xa1\x68\xc7\x55\xd0\x73\xa1\x5b\x14\x69\x9e\x41\x9a\x67\x90\xe6\x19\xa8\x79\x06\x6a\x9e\x81\x9a\x67\x13\x76\xd2\x49\xa0\x7e\x1a\xbc\x9f\x46\xdf\x4f\x03\xf5\xd3\xe0\xfd\x34\x50\x3f\x0d\xd2\x4f\x83\xd4\xce\x20\xb5\x33\x50\xed\x0c\x54\x3b\x03\x15\xca\x40\x85\x32\x78\xa1\x8c\xbe\x50\xb6\x11\x4c\x27\x81\x0a\x67\x13\x76\xd2\x49\xf0\x5a\x1a\x8e\xde\xd2\x49\x2d\xad\xda\x81\x8f\xcd\x20\xfd\x35\x48\x7f\x0d\x54\x4b\x03\x15\xce\x26\xec\x00\x82\x40\xb5\x34\x50\x2d\x0d\x5e\x38\xa3\x2f\x9c\x81\x0a\x67\xf0\xc2\x19\xa8\x70\x06\x29\x9c\x41\x0a\x67\x90\xc2\xd9\xb4\x7d\x40\x10\xa8\x99\x36\x61\x07\x10\xd4\xab\x32\xbf\x50\x7f\x0d\xd4\x5f\x9b\xb0\x03\x08\x82\xb7\xdc\xe8\x9b\x6b\xa0\xe6\x1a\xbc\xb9\xc6\x84\xfc\x22\xcd\x35\x48\x73\x0d\xd2\x5c\x03\x35\xd7\x40\xcd\x35\x50\x73\x0d\xd4\x49\x83\x77\xd2\x26\x1f\x0b\x43\x7d\x7f\x0d\xd4\x5f\x83\xf7\xd7\x40\xfd\x35\x48\x7f\x0d\xd2\x5f\x9b\x76\x20\x0c\x91\xa2\x1b\xa8\xe8\x06\x2a\xba\x81\x8a\x6e\xa0\xa2\x1b\xbc\xe8\x46\x5f\x74\x03\x15\xd9\xe0\x15\x35\x02\x7d\x08\xa4\xdd\xb5\x5b\x14\x29\xb2\x41\x8a\x6c\xd3\xfc\xe6\xea\xec\x5b\xc1\x9d\xa3\x6e\x1b\xa8\xdb\x06\xea\xb6\x81\xba\x6d\xf0\x6e\x1b\x7d\xb7\x6d\x23\xfc\xf1\x8d\xba\x6f\x13\xf6\x3e\xbe\x79\x43\xae\xf2\xe9\x45\xf9\xea\xeb\xfb\xcf\xbf\xbd\xbb\x7d\xf3\xe1\xd5\xdb\x26\xe4\x2f\x9b\xad\x0e\xdf\xdd\xbe\x3b\x6d\xf8\x8f\x67\x1a\x34\xab\xf4\x66\x91\xe2\x1b\xa8\xf8\x56\x21\x33\x0b\x15\xdf\x40\xc5\x37\x76\x8a\x6f\xb9\x16\xad\x72\x77\x5b\x96\xbe\x14\x17\x54\x8a\x0b\x2f\xc5\x4d\x3e\x04\x29\x0a\xfa\xfd\x69\x19\xb0\x2b\x55\x5b\xd2\xd6\x85\x96\x7d\x77\x64\x5f\xd3\x9e\xda\x57\x48\xf9\x2e\xa8\x7c\x17\x54\xbe\x9b\xb0\x13\xc0\x0a\xaa\xe8\x05\x55\xf4\x2a\x9c\xd6\xfb\xe7\x9f\xde\xff\xfa\xe7\x0f\xaf\xde\x3e\x7c\xff\xef\x0f\x6f\xde\xdd\xdd\xbe\xb9\x7f\xf1\xbb\xed\x0a\x78\x1b\x2c\x32\xb9\x0d\x64\x7d\xf9\xd0\x20\x5b\xfa\x76\x5f\x50\xbb\x2f\xbc\xdd\x17\xd4\xee\x8b\x90\x7b\x80\xb4\xfb\x22\xbd\xb5\xa4\xc7\x37\x6d\x3f\xfa\x15\x54\xf8\x9b\xb0\x13\xfd\x0a\xc2\x02\x05\x61\x81\x82\xb0\x40\x13\x76\xa2\x5f\xe1\xf0\x60\x91\xe1\x7d\xd0\x83\x85\x82\xc0\x42\xe1\x60\xa1\xa0\x5f\x56\x17\x25\xf6\x12\x64\xd0\xb4\xfd\xbc\x52\x08\x5b\x28\x88\x2d\x14\xc4\x16\x0a\x62\x0b\x05\x51\x83\xc2\xa9\xc1\x22\xc3\xfd\xf7\x44\xa1\x20\xa2\x50\x38\x51\x28\x86\xf6\x6f\x64\xff\x84\x28\x34\xed\xec\xe5\x45\x20\xc3\xa2\x2d\x99\xfc\xe6\xea\xc3\xcf\x7f\xb9\xff\xe6\xef\x8f\x6f\x53\x88\x3e\x14\x44\x1f\x0a\xa2\x0f\x4d\xd8\xc1\x3b\x05\x31\x8a\xc2\x19\xc5\x22\x43\xa3\x7a\x7e\x51\x10\x9f\x28\x9c\x3c\x14\xf4\x0b\xf1\xe2\xc4\x28\x02\x14\x9a\x76\x66\x14\x61\x0c\x05\x31\x86\x82\x18\x43\x41\xf4\xa0\x20\x7a\x50\x38\x3d\x58\x64\xb8\xe9\x9e\x2c\xb4\x11\x8c\x9a\x05\x91\x87\x26\xec\x44\xcd\xc2\xf9\x44\x41\x7c\xa2\x8c\xc4\x2f\xc2\x27\x9a\x76\xe6\x17\x41\x16\x05\x91\x88\x82\x18\x43\x41\x8c\xa1\x20\xc6\x50\x38\x3d\x58\x64\xe8\x57\x4f\x16\x0a\x22\x0b\x85\x93\x85\x26\x1f\x4b\x94\xe8\xf7\xe7\x65\x22\xae\x10\x0a\xd1\xb4\x33\x57\x08\x98\x68\xda\x81\x34\x31\x5d\x0f\x73\xfd\x41\x7f\xfe\xef\xb3\x2f\xcf\x4d\x9d\x0e\x65\x0c\x44\x3f\x0a\xa2\x1f\x05\xd1\x8f\x26\xec\x65\x0c\xce\x48\x16\x19\xde\x20\x3d\x13\x29\x88\x89\x14\xce\x44\xca\x8c\x4c\x9f\x89\xe9\x84\x89\x14\x82\x3a\x16\x2d\x31\xae\x4e\xe5\xc9\xb4\xdb\x15\x62\x24\x05\x31\x92\x82\x18\x49\x41\x8c\xa4\x70\x46\xd2\xe4\x43\xcc\x6a\xb9\x16\x7a\xd7\xb3\x96\x82\x58\x4b\xe1\xac\xa5\xa0\xe3\x00\x25\x88\x77\x84\xa2\x94\x38\x9a\x0f\x09\x5b\x59\xb4\xc4\x64\x44\x5c\x0a\x22\x2e\x05\x11\x97\x82\x88\x4b\xe1\xc4\x65\x91\xa1\x2b\x3d\x8d\x29\x88\xb6\x14\xce\x51\x0a\xc2\x25\x4d\xd8\xf9\x75\x60\x21\x50\xa5\x10\xa8\x52\x7a\xa8\x52\x08\x54\x59\xb4\xc4\x25\x84\x5a\x0a\x42\x2d\x05\xa1\x96\x26\xec\x05\x4b\x04\x64\x0a\x07\x32\x05\x02\x19\x1d\x86\x4b\x20\xb3\x8e\x96\x9f\xf2\xcc\xcb\x2a\x40\x2f\xab\x9c\xbc\x3b\x56\x21\x77\xa9\x6a\xb9\x4b\x9b\xf6\xe8\xd2\x36\x4a\x5c\xaa\xda\xa5\x4b\x75\x9a\xb8\xb4\x0a\x9d\x4b\x27\x41\x86\x53\x93\x38\x73\xa9\x0a\xc9\xfe\x57\x01\xec\xbf\xca\x70\xff\x97\x80\x63\x1b\x45\xbf\x7f\x06\x38\x36\xf9\x40\x7c\xa9\xd7\xe6\x5e\x41\x18\xb2\x6a\xbb\x40\xac\x5e\x08\x4d\xbd\xa4\x26\xdb\x28\x37\x55\x52\x53\x73\x44\xb2\x0a\x99\xa9\xe9\x01\xfc\xe4\x07\x5f\xac\x8f\xde\xfa\x1c\x91\xac\x02\xb6\x1e\xc2\x8f\x4d\xdb\x83\x60\x3a\x0c\x97\x94\x64\x1d\x89\xf7\xf7\x08\xa3\x24\x55\x4e\xde\x6f\xab\x00\x7d\x87\x94\x64\xd3\xce\xec\x84\x3c\x64\xd3\xf6\x62\x6b\xbd\x30\xf1\x3d\xc7\x29\x9b\x40\x63\xeb\x7a\x55\x76\x77\x54\xe8\xe2\xbd\xef\x39\x74\xd9\x04\x1a\x5b\xd7\xab\xf0\xdd\x01\xd1\x8c\x0e\xc3\x25\x9a\x59\x47\x62\xbd\xe9\x0c\xcd\x54\x39\x37\x1d\xa2\x99\xaa\x41\xd3\x21\x87\xa9\xda\x45\x40\x6d\xd3\xdc\xb8\x1c\xc2\x9c\x84\xc5\x12\xeb\x2d\xc9\xf1\xca\x2a\xe0\x65\xdb\xd1\x4c\x5a\xaf\x85\xc6\x5c\xa2\x98\x75\xb4\xbc\xf3\x5e\x1a\xc3\x50\x4c\x95\xf3\x77\x61\x88\x62\xaa\x06\x8d\xb9\x44\x31\xdb\x28\xf7\xca\x17\xaf\xa4\x5c\x78\x55\x39\xcc\xd0\x7b\x95\x03\x9a\x93\x90\xc4\x97\x26\xe4\x5e\x31\x40\x53\x65\xb8\xff\x4b\x40\xb3\x8e\xb2\xc4\xc2\xd0\x4a\x95\xf3\xfd\xa7\xcc\xa5\xbb\x4b\x20\x80\xa9\x1a\x74\xe9\x12\xc0\x6c\xa3\xdc\xa5\xf1\xe4\x52\x5c\xb8\x54\xb1\x4c\xe9\x5d\xca\xb1\xcc\x49\xc8\xd2\x67\x15\x72\x97\x18\x96\xa9\x32\x74\xe9\x12\xcb\x6c\x23\x80\xd1\x36\xbd\xf4\x2e\x32\x6c\x53\xe5\xfc\xed\x0d\xa2\x98\xaa\x41\x7f\x2e\x51\xcc\x36\xca\xfd\x39\x11\x16\x99\x2f\xfc\xa9\x20\x25\x7a\x7f\x72\x76\x72\x12\x40\xee\xcc\xd9\xc9\x2a\x60\x7f\x20\x15\xd1\x61\xb8\xa4\x22\xdb\x28\xc9\x9d\x8c\x8a\x6c\xf2\xb1\xdc\x99\x9f\x2a\xa9\x42\xf5\xea\xe1\x8b\xef\xef\xff\xf5\xd3\x0b\xc1\x86\x73\x21\xfb\xbe\xd0\xce\xed\xe0\x49\x72\x1b\x40\x00\x53\xb5\xb9\x66\x8a\xa7\xbe\x56\xba\x32\xf7\xbe\xe6\x74\x65\x13\xf6\xa2\xe7\x8c\xa2\x67\xce\x60\x56\x01\xbb\x0f\xb9\xca\xa6\x1d\x88\x9e\x97\x00\x66\x1d\x65\xd1\x93\x01\x98\x2a\xe7\x6f\xb6\x81\xac\x87\xf4\x65\xd3\x72\x53\x21\x70\xd9\xb4\x03\x01\x34\xd2\x1c\x93\x93\x99\x55\xc8\xdc\x0f\x94\x63\x72\x32\xb3\x0a\xd8\xd7\xf8\x7f\xe4\x18\x48\x71\x74\x18\x2e\x29\xce\x3a\xca\x72\x0c\xa3\x38\x55\xce\xad\x2d\xc8\x5a\x08\x67\x36\x2d\xb7\x16\x52\x9a\x4d\x3b\x60\x6d\x82\x73\xea\xb4\x54\xc3\x2f\xac\xad\x82\x3e\xfd\x38\xc8\x09\xcf\x49\x58\xdc\xd6\xde\xed\x9c\xdd\xac\x02\x76\x9b\xb0\x1b\xe9\xd9\x4d\x1d\x2d\x46\x5d\x38\x28\x9c\xdd\x48\x7e\x40\x66\x13\x28\x87\xab\x57\xa5\x3e\x0b\xc1\x3b\x32\x60\x9f\x85\x70\x1e\x19\xb2\xd4\x2a\x03\x48\xad\x82\x38\x8f\x0c\x20\xb5\x0a\xe2\x3c\xc2\x39\x8f\x10\xce\x23\x3d\xe7\xa9\xa3\x24\xb5\x0a\xe7\x3c\x92\x1f\x64\xa9\x42\xee\x02\xe1\x31\x22\xc4\x05\x02\x66\x44\xb2\x54\x2a\x02\x52\xa9\x20\x30\x23\xf9\xa9\x94\x2a\xe4\x2e\x70\xe4\x22\x04\xb9\x48\x4f\x52\xda\x08\xa6\xd2\xa6\xf7\xa9\x54\x38\x69\x91\xfc\x3c\x4a\x15\x72\x97\xf4\x48\xd2\x11\x02\x63\x44\x89\x97\x84\xca\x88\x66\x49\x47\x14\x24\x9d\x2a\x2c\xef\x09\x97\x5e\x2a\xc8\x30\x82\x30\x8a\x70\x40\x22\x04\x90\x34\x6d\x3f\xc3\x48\x4f\x52\xea\x28\xc9\x30\xc2\x49\x8a\xe4\x87\x5c\xaa\x90\x9b\x4a\x30\x8a\x18\xb1\x8b\x20\x96\xa6\xed\x7f\xd0\xc9\x89\xc5\x9c\xd2\xca\x53\x5f\x2d\x63\x65\x9b\x90\xbd\x46\x0d\xe0\x31\x41\x2c\xa6\x09\x3b\x78\x4c\x38\xb1\x11\x42\x61\xa4\xa7\x30\x75\x94\xe0\x31\xe1\x14\x46\xf2\x03\x31\x55\xc8\x4d\x25\x08\x46\x9c\x98\x4a\x58\x8c\x1c\x7b\x74\x44\xbd\xb0\x0f\xa6\x92\x9f\xaa\x59\x85\xcc\x54\x07\xc1\x54\x10\xb4\x11\x0e\x6d\x9a\x7c\x28\x98\x0a\x01\x3c\xd2\x03\x9e\x3a\x4a\x82\xa9\x70\xc0\x23\xf9\xd9\x99\x2a\xe4\xd6\x12\x6e\x23\x23\xb1\x96\x00\x1c\x39\xf6\x47\x3f\xf5\xc2\x3e\x98\xca\x08\x82\x69\x13\x9e\x06\x53\x41\xf0\x47\x46\x10\x4c\x05\xc1\x1f\xe1\xf0\x47\x08\xfc\x91\x1e\xfe\xd4\x51\x16\x4c\x39\xdc\x91\xfc\x9c\xcd\x26\xec\x20\x3a\x99\x90\xcf\x84\xff\xc8\x44\x7c\x26\x20\x48\xa6\x34\x12\x4d\xd7\xa7\xca\x76\x73\x75\xff\xc3\x0f\x67\xd3\x3c\x28\x4d\xe8\xc3\x35\x3f\x5a\x53\x85\xdc\x41\x8e\x87\x84\xe0\x21\xe9\xf1\x50\x1b\xe1\xa0\x34\xa3\xa0\xc4\xf1\x91\xe4\x87\x6a\xaa\x90\x7b\x47\x60\x8f\x10\xd8\x23\x04\xf6\xc8\x9c\x41\xbc\x65\x9a\x78\x37\x03\xb4\x27\x08\x01\xc9\x0c\xd0\x9e\x20\xb8\x23\x1c\xee\x08\x81\x3b\xd2\x33\x9b\x36\xea\xd1\x9e\x70\x66\xd3\xe4\x43\x68\x4f\xf2\x03\x36\x55\xc8\x7d\x8c\x43\x81\x97\x50\x20\x21\x14\x48\x08\x05\x92\x48\x03\x6f\xa4\x6e\x07\x8a\xc1\x08\xf9\x34\x61\x07\xf8\x49\xa0\xb0\x8c\xc0\x90\x70\x30\x24\x04\xf6\x34\xed\x40\x58\xee\xa9\x50\x1d\x65\x61\x99\x53\x21\xc9\xcf\xf6\x54\x21\xbf\x21\xb6\xc7\x82\x9c\xfd\x3c\xe3\xe9\xe7\xa9\xa3\xdf\xde\xbe\xfc\xf0\xfa\xcb\x87\xbf\xbd\x7e\xf8\xe4\x87\xbb\xdb\x17\xbf\xbd\xfd\xe4\xf1\x22\xed\xbf\x2e\xbf\x6b\x08\x60\x12\x02\x98\xe4\x28\x60\x92\x92\xe6\xee\x92\xde\x5e\x75\xaa\x4f\xa6\xd9\xb7\xcb\x03\x3b\xc2\x50\x52\xb2\xc0\xfe\xdb\xdb\x97\x77\xcf\xfe\xe7\xee\xf9\x97\x77\xcf\xdf\xde\x3d\x7f\xb1\x0e\x3f\xd9\xbe\xe0\x31\x4a\xa0\x35\x83\x1b\xb3\x1c\x4a\xfb\x9c\x74\x69\x4f\xb3\xea\x28\x49\xf4\xca\x69\x56\x95\xf3\x57\x42\xd3\xf6\x5f\x09\x8a\x8e\x33\x29\x82\x5d\x4a\x60\x97\x12\xd8\xa5\x04\x76\x35\x6d\xda\x39\x65\x58\x2f\x9c\x4f\xff\xe6\xa7\xf7\x5c\x9b\x2e\xff\xd9\xce\xf9\x26\xc7\x29\x53\x3c\xbd\x25\x75\x00\x81\xb3\x09\x7d\x36\x51\x44\xcc\x94\x13\x33\xed\xa9\x58\x1d\x25\x41\x51\x39\x15\xab\x32\xf0\x1c\x9d\x76\x52\x44\xcc\x94\x10\x33\x25\xc4\x4c\x09\x31\xd3\x7a\x94\x49\x2f\x1c\x92\xd5\xb7\xdc\xa1\xe5\x63\xfb\xf4\x29\x71\xe6\x50\x9d\x16\xf2\xa6\xa1\x02\x78\xa8\x22\x12\xa7\x08\xb8\x29\x07\x6e\xda\x43\xb5\x3a\x4a\xd0\xa6\x72\x68\x56\x65\x60\x22\x3a\xba\xa4\x08\xa8\x29\x41\x65\x4a\x50\x99\x12\x54\xa6\x9a\x65\xfc\x65\xda\xbf\xb5\xab\x82\x8c\xaf\xe8\x1c\x92\x6e\x7f\xfc\x95\xdf\x0c\x08\xa3\x29\xc7\x68\xda\x13\xb0\x36\x82\x69\xbe\xe9\x7d\x9a\x57\x4e\xc8\xaa\x0c\x1c\x44\xe7\x90\x14\xd1\x33\x25\xf4\x4c\x09\x3d\x53\x42\xcf\xd4\xb2\xa4\xbf\x4c\x13\x07\x0d\x24\x7d\x45\xa8\x4c\x6d\x4d\xfa\xb9\x83\x08\x98\x29\x47\x61\xda\xe3\xae\x36\xea\x33\xbd\x72\xdc\xd5\xe4\x43\x99\xbe\x5e\x0b\xdc\x44\x87\x97\x14\x61\x33\x25\xd8\x4c\x09\x36\x53\x82\xcd\xf4\x28\x36\x53\xcf\x32\xd9\x32\x4d\x6c\xf7\xdd\x4c\xa6\xe9\x73\x5a\x37\x21\xfb\x8c\x4c\x41\x5c\xf2\x7d\x5b\x72\xcb\xef\x1f\xc4\xe6\xf4\xc0\x63\x5c\xd7\xab\xf0\x5d\xd6\x93\xb7\x3a\xca\x22\x18\x27\x6f\x55\x06\x77\xce\x78\x34\x82\xa1\xf3\x59\x8a\xf0\x9d\x12\x7c\xa7\x04\xdf\x29\xc1\x77\x7a\x14\xdf\xe9\x98\x91\xd9\x65\x9a\xdc\x62\xf9\x5f\xd5\xad\x42\xf6\xce\x32\xae\xbc\x36\xbf\x33\x10\xc7\x53\xce\xf1\xf4\xf0\xf3\x67\x75\xd0\x9e\xeb\xd5\x51\x42\x66\x95\x73\xbd\x2a\x83\xfb\x03\x31\x3f\x45\x34\x4f\x09\xcd\x53\x42\xf3\x94\xd0\x3c\x3d\xf6\x17\x76\xf5\xc2\x9e\xda\x6a\x8a\xfd\x74\x42\xd1\x7a\xea\x58\xae\xa2\x83\x62\x3a\xad\x2c\x37\xbf\x13\x10\x0f\x54\xce\x03\xb5\x67\x7e\x75\x94\x85\x71\xce\xf4\xaa\x0c\xdc\x45\x47\xc0\x9a\xb0\x73\xd4\x40\x11\x15\x54\x42\x05\x95\x50\x41\x25\x54\x50\xe7\xec\xa8\x81\xa6\x54\x50\x67\x14\xb8\x11\x15\xd4\x79\x3d\x80\x90\xfb\x88\xd8\xa0\x72\x36\xa8\x3d\xff\xab\xa3\x2c\x8f\x73\xfe\x57\x65\xe0\x23\x3a\xcf\xa5\x88\xf7\x29\x21\x79\x4a\x48\x9e\x12\x92\xa7\x91\xa6\xb9\x94\xe4\x69\xa0\x34\x17\xe8\x33\x3b\x78\x9a\x43\xa4\x4e\x39\xa9\xd3\x1e\xb2\xb5\x51\x92\xe6\x38\x64\xd3\xc3\x8f\xea\x5d\xaf\x05\x6e\xa2\x23\x5c\x8a\x60\x9d\x96\x23\xf4\x56\x09\x87\x53\xc2\xe1\x94\x70\x38\x2d\x19\xbd\xd5\x14\xaf\x69\x01\xf4\x56\x11\x3b\xd3\xf4\x09\xc1\xc9\xbf\xab\xd1\xdb\xfc\xce\x40\xa8\x4c\x39\x04\xb3\x1e\x82\xd5\x51\x82\x5f\x8d\x43\x30\x23\x10\xcc\x10\xdb\x32\xc4\xb6\x8c\xb0\x2d\x23\x6c\xcb\x08\xdb\xb2\xe1\xe0\x27\xac\x0d\x59\x76\xb7\x21\x33\xbc\x4d\x59\x76\xb7\x01\x64\x77\x43\x47\xc5\x6c\xa0\xa9\xdc\x10\xfe\x6a\xc2\x4e\x2a\x37\x0e\xc9\xac\x87\x64\x75\x94\xa4\x72\xe3\x90\xcc\x08\x24\x6b\xda\x7e\x2a\x37\x74\xfe\xcc\x10\x4d\x33\x42\xd3\x8c\xd0\x34\x23\x34\xcd\x8e\x3d\x4e\xa9\x5e\xd8\xa7\x72\x93\xf4\xe6\x41\x7f\x57\x68\x08\x9a\x99\xd0\x54\x6e\x88\xa9\x19\x67\x6a\x4d\x3e\x94\xca\xad\xe7\x6f\x75\x94\xa4\x72\xe3\xfc\xcd\x08\x7f\x33\x74\xa0\xcd\x10\x7f\x33\xc2\xdf\x8c\xf0\x37\x23\xfc\xcd\x34\x4b\x64\x96\xf2\x37\x53\x90\xc8\x9a\x20\x4f\xc2\xb6\xa1\x33\x6d\xa6\x34\xa4\x19\x42\x72\xc6\x91\x9c\xf5\x48\xae\x8e\x92\x90\x66\x1c\xb9\x19\x41\x6e\x86\x0e\xac\x59\xca\xe2\xba\x5b\x0b\x81\x39\x23\x60\xce\x08\x98\x33\x02\xe6\xcc\x32\xb4\x6a\x29\x98\x33\x03\x68\xd5\x10\x98\x33\xa3\x68\xd5\x10\x98\x33\x0e\xe6\xac\x07\x73\x46\x1f\x2c\xbd\xe9\x3d\x5a\x35\x0e\xee\x8c\xc0\x38\x43\x30\xce\x10\x8c\x33\x02\xe3\x8c\xc0\x38\x23\x30\xce\x3c\x0b\xe3\x96\x32\x36\x73\x10\xc6\x0d\x1d\x58\x33\xa7\x61\xdc\x10\x1a\x33\x0e\xbd\xac\x87\x5e\x6d\xd4\x87\x71\xe3\xd0\xab\xc9\x87\xc2\xb8\x11\x40\x66\xe8\xd8\x9a\x21\xee\x55\x85\xbd\x30\x6e\x84\x8e\x19\xa1\x63\x46\xe8\x98\x8d\x59\x18\xb7\x14\x7a\xd9\x08\xc2\xb8\x21\xe8\x65\xe9\xff\x0f\x53\xf2\xef\x62\x61\xdc\x10\x1a\x33\x8e\xc6\xac\xc7\x5d\x75\x94\x85\x71\x8e\xbb\x8c\xe0\x2e\x43\xb8\xcb\x10\xee\x32\x82\xbb\x8c\xe0\x2e\x23\xb8\xcb\x8e\xe2\x2e\x9b\xd2\x3c\x95\xe2\x2e\xcb\x1f\x33\xb5\x0a\xd9\xc7\xed\xc4\xf3\x14\x62\x5b\xc6\xd9\x96\x1d\x7e\x88\xb6\x0e\xd6\x73\xb0\x3a\xca\xf2\x14\xe7\x60\x46\x38\x98\xa1\x73\x6f\x86\x08\x97\x11\xc2\x65\x84\x70\x19\x21\x5c\x4d\x3b\x60\x7b\xf2\x38\xaa\x3a\x4d\x6c\x9f\x01\xe5\x6c\xc2\x53\xca\x69\x88\x8e\xd9\x4c\x29\xa7\x21\x3a\x66\x9c\x8e\x59\x4f\xc7\xea\x28\xa1\x9c\xc6\xe9\x98\x11\x3a\x66\x88\x8e\x19\xa2\x63\x46\xe8\x98\x11\x3a\x66\x84\x8e\x59\xa4\x69\x39\xa5\x63\x16\x28\x2d\xa3\x73\x6e\x16\x3c\x1a\x23\x3a\x66\x9c\x8e\x59\x4f\xc7\xea\x28\x8b\xc6\x9c\x8e\x19\x21\x5e\x86\x8e\xa7\x19\x22\x5e\x46\x58\x96\x11\x96\x65\x84\x65\x59\x49\x43\x6f\xca\xb2\xac\xa0\xd0\x8b\x58\x96\x15\x1e\x7a\x11\xa5\x32\x4e\xa9\xbc\xa7\x54\x6d\x04\x43\x6f\xd3\xfb\xd0\xeb\x9c\x62\x39\xa1\x58\x8e\x28\x96\x23\x8a\xe5\xc3\x91\x98\xe4\x84\x75\x39\x61\x5d\x4e\x58\x97\x0f\x59\x4c\xf2\x14\x61\xf9\x00\x62\x92\xa3\xf3\x57\x3e\xd0\x00\xe4\x88\x4f\x39\x27\x4f\xde\x93\xa7\x3a\x4a\x02\x90\x73\xf2\xe4\x84\x3c\x39\x3a\x9e\xe5\x08\x28\x39\x01\x4a\x4e\x80\x92\x13\xa0\xe4\x47\x81\x92\x4b\x46\x23\x3d\x05\x4a\x6d\xca\x68\xa4\xa7\x4f\xf5\xde\x84\xe4\x55\xed\x42\x69\xa4\x23\xe6\xe4\x07\x1e\xe7\xbd\x5e\x85\xef\x89\x9e\x36\xd5\x51\x42\x23\x9d\xd3\x26\x27\xb4\xa9\x69\xfb\x34\xd2\x11\x96\x72\x84\xa5\x9c\x60\x29\x27\x58\xca\x09\x96\xf2\xa3\xcf\xb5\x72\xcd\xd2\xb3\xa7\xfc\xca\xd1\xd3\xae\x1c\x9d\x1f\x73\xa5\xe9\xd9\x11\xac\x72\x0e\xab\x9a\x7c\x28\x3d\x7b\x0f\xb6\xea\x28\x49\xcf\xce\xc1\x96\x13\xb0\xe5\xe8\x2c\x99\x23\x64\xe5\x04\x59\x39\x41\x56\x4e\x90\x95\x1f\xfd\x4b\x4c\xb7\x2c\x3d\x7b\xca\xb6\xdc\x40\x7a\x6e\xc2\xd3\xf4\xec\x08\x77\xb9\xd1\xf4\xec\x08\x77\x39\xc7\x5d\xde\xe3\xae\x3a\x4a\xd2\xb3\x73\x9c\xe5\x04\x67\x39\xc2\x59\x9e\xfe\xad\x66\xb7\x6d\x04\xbd\x9c\x40\x2f\x27\xd0\xcb\x09\xf4\x72\xcf\x12\x9c\xa7\xd0\xcb\x1d\x24\x38\x47\xa7\xc6\xdc\x69\x82\x73\x04\xbd\x9c\x43\x2f\xef\xa1\x97\xd3\xa7\x9c\x6f\x7a\x92\xe0\x38\x14\x73\x02\xba\x1c\x1d\xf0\x72\x04\xba\x9c\x20\x2c\x27\x08\xcb\x09\xc2\xf2\x31\xc3\x96\x9e\x22\x2c\x1f\x01\xb6\xf4\x11\x39\x38\x52\x6c\xe9\x08\x4e\x39\x87\x53\xde\xc3\xa9\x36\xea\xb1\xa5\x73\x38\xe5\x87\x9f\x7b\xbe\x5e\x0b\xdc\x44\x20\xcb\x11\xc8\xaa\xc2\x6e\x1e\x27\xb8\xcb\x09\xee\x72\x82\xbb\x7c\x4a\xf3\x78\x4a\xb1\x7c\x42\x79\x1c\x9d\xd0\x6a\xc2\x0e\xb6\xf4\x89\xa7\x76\xc4\xba\x9c\xb3\x2e\xef\xf9\x55\x1d\x65\xa9\x9d\xf3\x2b\x27\xfc\xca\xd1\x39\x2e\x47\xfc\xca\x09\xbf\x72\xc2\xaf\x9c\xf0\x2b\x3f\xca\xaf\x7c\x4e\x53\x7b\xca\xaf\xda\x94\xa6\xf6\x19\xa5\x76\xc4\xb3\x7c\xe6\xa9\x1d\xf1\xac\x26\xec\xa5\x76\x4e\xbd\xbc\xa7\x5e\x75\x94\xa5\x76\x4e\xbd\x9c\x50\xaf\xa6\x1d\x48\xed\x08\x8f\x39\xc2\x63\x4e\xf0\x98\x13\x3c\xe6\x04\x8f\xf9\xd1\x87\x81\x79\xf2\x98\xf6\x3a\x4d\x6e\x9e\x40\xf1\x0d\x9d\x32\xf3\xe0\x59\x0d\x71\x34\xe7\x1c\xcd\x7b\x8e\x56\x47\x59\x56\xe3\x1c\xcd\x09\x47\x73\x74\x72\xcc\x11\x47\x73\xc2\xd1\x9c\x70\x34\x27\x1c\xcd\x4b\x46\x3a\x3d\xe5\x68\x5e\x00\xe9\xf4\xd2\x9d\x0b\xf0\x82\x4c\x2b\x14\x7e\x3a\x42\x6b\xce\xd1\xda\xd8\xa3\xb5\x11\x3d\x8f\x7d\xe4\xe8\x6c\x24\xe8\x6c\x44\xe8\x6c\x4c\x1f\x04\x76\xf9\x7a\x18\x11\x60\x1b\x09\x3a\x1b\x09\x3a\x1b\x09\x3a\x1b\x87\x2c\x60\x8f\x29\x3a\x1b\x07\x10\xb0\x47\x74\xb4\x6b\x1c\x68\xc0\x1e\x11\x3a\x1b\x19\x3a\xfb\xbf\x00\x00\x00\xff\xff\x72\xdc\xb0\x1c\x01\x8e\x00\x00")

func assetHolidaysYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetHolidaysYml,
		"asset/holidays.yml",
	)
}

func assetHolidaysYml() (*asset, error) {
	bytes, err := assetHolidaysYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "asset/holidays.yml", size: 36353, mode: os.FileMode(420), modTime: time.Unix(1608792761, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"asset/holidays.yml": assetHolidaysYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"asset": &bintree{nil, map[string]*bintree{
		"holidays.yml": &bintree{assetHolidaysYml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

